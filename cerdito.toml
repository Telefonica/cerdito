# Atlas configuration
#
# You can configure here the public key and the private key to access Atlas,
# otherwise the system will use the environment variables
# MONGODB_ATLAS_PUBLIC_KEY and MONGODB_ATLAS_PRIVATE_KEY
#
# [atlas]
# public_key = "your_public_key"
# private_key = "your_private_key"
#
# Next configure the Atlas clusters you want to stop and start, you can set
# as many as you want. You need the cluster name and the group id.
# To obtain the group id you can simply enter the Atlas web site in the
# cluster you are interested in and in the URL itself you will see the id.
#
# [[atlas.clusters]]
# name = "name-of-cluster"
# group_id = "hexadecimal-group-id"
# [[atlas.clusters]]
# name = "other-cluster"
# group_id = "other-cluster-group-id"
#
# You can completely skip this configuration if you do not want to use this
# functionality.

[atlas]
public_key = "somepublickey"
private_key = "someprivatekey"

[[atlas.clusters]]
name = "sample"
group_id = "1a2b3c4d5e6f7a8b9c0dcafe"

# Azure configuration
#
# You can configure here the Azure tenant ID, Azure client ID and Azure
# client secret to access Azure, otherwise the system will use the
# environment variables AZURE_TENANT_ID, AZURE_CLIENT_ID, and
# AZURE_CLIENT_SECRET
#
# [azure]
# tenant_id = "your_tenant_id"
# client_id = "your_client_id"
# client_secret = "your_client_id"
#
# Next configure the AKS you want to stop and start, you can set as many as
# you want. You need the subscription id, resource group name and resource
# name of your AKS.
#
# [[azure.aks]]
# subscription_id = "subscription-uuid"
# resource_group_name = "alice-resource-group-name"
# resource_name = "alice"
# [[azure.aks]]
# subscription_id = "subscription-uuid"
# resource_group_name = "bob-resource-group-name"
# resource_name = "bob"
#
# If you are using Databricks you can configure the URL and the jobs (by
# name) that you want to pause scheduling. This is independent of AKS, you
# can have configuration for AKS only, Databricks only or both.
#
# [[azure.databricks]]
# url = "https://example.azuredatabricks.net"
# jobs = ["alice", "bob"]
# [[azure.databricks]]
# url = "https://other.azuredatabricks.net"
# jobs = ["other-alice", "other-bob"]
#
# You can completely skip this configuration if you do not want to use this
# functionality.

[azure]
tenant_id = "sometenantid"
client_id = "someclientid"
client_secret = "someclientsecret"

[[azure.aks]]
subscription_id = "somesubscriptionid"
resource_group_name = "resourcegroup"
resource_name = "aksname"

[[azure.databricks]]
url = "https://sample.azuredatabricks.net"
jobs = ["sample-alice", "sample-bob"]

# Kubernetes configuration
#
# You can configure here the kubeconfig location, otherwise the system will
# use the passed config or the environment variable KUBECONFIG (by default
# ~/.kube/config is used)
#
# [kubernetes]
# kubeconfig = "/config/location/.kubeconfig"
#
# Next, you configure the Kubernetes projects you want to stop. You must
# specify the namespace and deployments that you want to scale to zero.
#
# [[kubernetes.projects]]
# namespace = "dev"
# deployments = ["alice", "bob"]
# [[kubernetes.projects]]
# namespace = "pre"
# deployments = ["alice", "bob"]
#
# You can completely skip this configuration if you do not want to use this
# functionality.

[kubernetes]
kubeconfig = "./kubeconfig"

[[kubernetes.projects]]
namespace = "sample-namespace"
deployments = [ "deploy-alice", "deploy-bob" ]
